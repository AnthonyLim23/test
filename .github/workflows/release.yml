name: Build and upload to PyPI

on:
  pull_request_review:
    types: [submitted]
permissions:
  contents: write

jobs:
  update_version:
    name: update version
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Update version on merge
        run:  |
            python tools/version.py "beta"
      - name: Store changes
        uses: actions/upload-artifact@v3
        with:
          name: setup
          path: setup.py


  build_wheels:
    name: Build and test wheels on ${{ matrix.os }}
    if: github.event.review.state == 'approved'
    runs-on: ${{ matrix.os }}
    needs: [update_version]
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v3
        with:
          name: setup
      - name: build wheel
        uses: pypa/cibuildwheel@v2.8.0
        env:
          # List of platforms to build on (incl. Python version)
          CIBW_BUILD: cp3{8,9,10}-manylinux_x86_64 cp3{8,9,10}-win_amd64 cp3{8,9,10}-macosx_x86_64 cp38-macosx_arm64

          CIBW_BEFORE_BUILD: >
             pip install numpy cython==0.29.32 scipy joblib
          # Install test dependencies and run tests
          CIBW_TEST_REQUIRES: pytest joblib
          CIBW_TEST_COMMAND: >
            pytest {project}/test
      - name: upload wheel
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
      - name: Store changes
        uses: actions/upload-artifact@v3
        with:
          name: setup2
          path: setup.py


  update_setup:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout_release
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          repository: ${{github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
 
      - uses: actions/download-artifact@v3
        with:
          name: setup2
      - name: check
        run: |
          cat setup.py
          echo ${{github.event.pull_request.head.repo.full_name }}
      - name: Commit on merge
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add setup.py
          git commit -m "update version number"
          git push

